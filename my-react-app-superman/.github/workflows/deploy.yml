name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Debug workspace
        run: |
          pwd
          echo "Files in current directory:"
          ls -la
          echo "Checking public directory:"
          ls -la public || echo "Public directory not found in root"
          echo "Checking my-react-app-superman/public directory:"
          ls -la my-react-app-superman/public || echo "Public directory not found in my-react-app-superman"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Create temporary public directory if needed
        run: |
          # If no public directory exists in the root, but it exists in the subdirectory
          if [ ! -d "public" ] && [ -d "my-react-app-superman/public" ]; then
            echo "Copying public directory from my-react-app-superman"
            cp -r my-react-app-superman/public ./public
          elif [ ! -d "public" ]; then
            echo "Creating empty public directory"
            mkdir -p public
            echo "Creating basic index.html"
            echo '<html><body><h1>PIMFeeder</h1><p>Loading...</p></body></html>' > public/index.html
          fi
          
          # Ensure we have all necessary public files
          if [ ! -f "public/index.html" ]; then
            echo "Creating basic index.html"
            echo '<html><body><h1>PIMFeeder</h1><p>Loading...</p></body></html>' > public/index.html
          fi
          
          echo "Public directory contents:"
          ls -la public

      - name: Install dependencies
        run: npm install

      - name: Build
        run: CI=false npm run build
        env:
          REACT_APP_API_URL: 'https://pimfeederplus-git-main-krystlizes-projects.vercel.app'
          REACT_APP_API_BASE_URL: 'https://pimfeederplus-git-main-krystlizes-projects.vercel.app/api'
          REACT_APP_ENV: 'production'
          BUILD_PATH: '.'
          GITHUB_PAGES: 'true'

      - name: Check build output
        run: |
          echo "Build directory contents:"
          ls -la build || echo "Build directory not found"

      # GitHub Pages deployment
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 