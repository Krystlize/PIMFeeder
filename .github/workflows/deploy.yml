name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  BUILD_PATH: "." # Changed from "my-react-app-superman" to "." to point to root directory

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create complete public directory
        run: |
          echo "Creating public directory and required files"
          mkdir -p public
          
          # Create index.html
          cat > public/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
            <head>
              <meta charset="utf-8" />
              <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
              <meta name="viewport" content="width=device-width, initial-scale=1" />
              <meta name="theme-color" content="#000000" />
              <meta
                name="description"
                content="PIMFeeder Redirect Page"
              />
              <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
              <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
              <title>PIMFeeder</title>
            </head>
            <body>
              <noscript>You need to enable JavaScript to run this app.</noscript>
              <div id="root"></div>
            </body>
          </html>
          EOL
          
          # Create manifest.json
          cat > public/manifest.json << 'EOL'
          {
            "short_name": "PIMFeeder",
            "name": "PIMFeeder Redirect",
            "icons": [
              {
                "src": "favicon.ico",
                "sizes": "64x64 32x32 24x24 16x16",
                "type": "image/x-icon"
              },
              {
                "src": "logo192.png",
                "type": "image/png",
                "sizes": "192x192"
              },
              {
                "src": "logo512.png",
                "type": "image/png",
                "sizes": "512x512"
              }
            ],
            "start_url": ".",
            "display": "standalone",
            "theme_color": "#000000",
            "background_color": "#ffffff"
          }
          EOL
          
          # Create robots.txt
          cat > public/robots.txt << 'EOL'
          # https://www.robotstxt.org/robotstxt.html
          User-agent: *
          Disallow:
          EOL
          
          # Create empty favicon and logo files
          touch public/favicon.ico
          touch public/logo192.png
          touch public/logo512.png
          
          echo "Public directory created with all required files:"
          ls -la public/

      - name: Install dependencies
        working-directory: ${{ env.BUILD_PATH }}
        run: npm ci

      - name: Build
        working-directory: ${{ env.BUILD_PATH }}
        env:
          CI: false # Disable treating warnings as errors
          REACT_APP_API_URL: 'https://pimfeederplus-git-main-krystlizes-projects.vercel.app'
          REACT_APP_API_BASE_URL: 'https://pimfeederplus-git-main-krystlizes-projects.vercel.app/api'
          REACT_APP_ENV: 'production'
        run: |
          npm run build
          ls -la build || echo "Build directory not found"

      - name: Debug directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Build path contents:"
          ls -la ${{ env.BUILD_PATH }}
          echo "Build directory contents (if exists):"
          ls -la ${{ env.BUILD_PATH }}/build || echo "Build directory not found"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3 